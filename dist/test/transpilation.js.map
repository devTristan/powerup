{"version":3,"sources":["../../src/test/transpilation.js"],"names":[],"mappings":";;;;;;;;;;wBAAiB,WAAW;;;;2BACX,cAAc;;;;yBAChB,YAAY;;;;oBACV,MAAM;;;;AAEvB,2BAAK,oCAAoC,EAAE,oBAAgB,CAAC;MACtD,OAAO,EACP,SAAS,EACT,OAAO,EACP,OAAO,EACP,KAAK;;;;AAJL,eAAO,GAAG,kBAAK,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC;AACvC,iBAAS,GAAG,kBAAK,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;AACrC,eAAO,GAAG,kBAAK,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC;;yCACpB,8BAAK,SAAS,GAAG,oBAAoB,CAAC;;;AAAtD,eAAO;;yCACO,SAAQ,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,MAAM,EAAI;AAClD,cAAI,IAAI,GAAG,kBAAK,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAA;AAClE,iBAAO,SAAQ,GAAG,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,uBAAG,IAAI,CAAC,MAAM,CAAC,EAAE,uBAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;SACnE,CAAC,CAAC;;;AAHC,aAAK;;AAIT,aAAK,CAAC,OAAO,CAAC,UAAC,IAAsC,EAAK;qCAA3C,IAAsC;;cAArC,MAAM;cAAE,IAAI;cAAE,WAAW;cAAE,SAAS;;AAClD,WAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,sCAAsC,CAAC,CAAA;SAC7I,CAAC,CAAA;;;;;;;CACH,CAAC,CAAA","file":"transpilation.js","sourcesContent":["import test from 'blue-tape'\nimport glob from 'glob-promise'\nimport fs from 'fs-promise'\nimport path from 'path'\n\ntest('transpilation should be up to date', async function (t) {\n  let rootDir = path.join(__dirname, '../..')\n  let sourceDir = path.join(rootDir, 'src')\n  let distDir = path.join(rootDir, 'dist')\n  let sources = await glob(__dirname + '/../../src/**/*.js')\n  let stats = await Promise.all(sources.map(source => {\n    let dist = path.join(distDir, source.substr(sourceDir.length + 1))\n    return Promise.all([source, dist, fs.stat(source), fs.stat(dist)])\n  }))\n  stats.forEach(([source, dist, sourceStats, distStats]) => {\n    t.ok(new Date(distStats.mtime) >= new Date(sourceStats.mtime), source.substr(sourceDir.length + 1) + ' should be transpiled and up to date')\n  })\n})\n"]}