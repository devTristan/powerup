{"version":3,"sources":["../../src/test/usage.js"],"names":[],"mappings":"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","file":"usage.js","sourcesContent":["import test from 'tape'\nimport powerup from '..'\n\ntest('argument overrides', function (t) {\n  let modifier = powerup(\n    (next, args) => next(args.concat([1])),\n    (a, b) => a + b\n  )\n  t.equal(modifier(5), 6)\n  t.end()\n})\n\ntest('return overrides', function (t) {\n  let modifier = powerup(\n    (next, args) => next(args) * 2,\n    (a, b) => a + b\n  )\n  t.equal(modifier(3, 4), 14)\n  t.end()\n})\n\ntest('property overrides', function (t) {\n  let sum = powerup({\n    params: ['...number']\n  }, (...numbers) => numbers.reduce((a, b) => a + b))\n\n  t.equal(typeof sum, 'function', 'sum should be a function')\n  t.deepEqual(sum.params, ['...number'], `sum.params should be ['...number']`)\n  t.equal(sum(5), 5, 'sum(5) should be 5')\n  t.equal(sum(0, 0.2, 0.03), 0.23, 'sum(0, 0.2, 0.03) should be 0.23')\n  t.equal(sum(1, 2, 3), 6, 'sum(1, 2, 3) should be 6')\n  t.end()\n})\n\ntest('prototype overrides', function (t) {\n  class GaveUp extends Error {\n    constructor (workDone) {\n      super(`Gave up after getting ${workDone} work done`)\n      this.workDone = workDone\n    }\n  }\n\n  let worker = {\n    prototype: {\n      workDone: 0,\n      work: function () {\n        this.workDone++\n      }\n    }\n  }\n\n  let quitter = function (next, args) {\n    try {\n      return next(args)\n    } catch (err) {\n      if (err instanceof GaveUp) {\n        return err\n      } else {\n        throw err\n      }\n    }\n  }\n  quitter.prototype = {}\n  quitter.prototype.giveUp = function () {\n    throw new GaveUp(this.workDone)\n  }\n\n  let me = powerup(worker, quitter, function () {\n    this.work()\n    this.giveUp()\n    this.work()\n    return this.workDone\n  })\n\n  t.deepEqual(Object.keys(me), [], 'should have no properties')\n  let result = me()\n  t.ok(result instanceof GaveUp, 'should have given up')\n  t.equal(result.workDone, 1, 'should have only done one unit of work')\n  t.end()\n})\n"]}